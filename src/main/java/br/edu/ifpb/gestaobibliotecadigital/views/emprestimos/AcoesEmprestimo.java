package br.edu.ifpb.gestaobibliotecadigital.views.emprestimos;

import br.edu.ifpb.gestaobibliotecadigital.controllers.EmprestimoController;
import br.edu.ifpb.gestaobibliotecadigital.models.emprestimos.Emprestimo;
import br.edu.ifpb.gestaobibliotecadigital.models.usuarios.Usuario;
import br.edu.ifpb.gestaobibliotecadigital.views.components.UpdateObserver;
import javax.swing.JOptionPane;

public class AcoesEmprestimo extends javax.swing.JPanel {

    private Emprestimo emprestimo;
    public final UpdateObserver events = new UpdateObserver();
    private final EmprestimoController emprestimoController = new EmprestimoController();

    public AcoesEmprestimo() {
        initComponents();
    }

    /**
     * Atualiza o empréstimo selecionado
     */
    public void setEmprestimo(Emprestimo emprestimo) {
        this.emprestimo = emprestimo;

        remover.setEnabled(emprestimo != null);
        devolver.setEnabled(emprestimo != null && !emprestimo.foiDevolvido());
        multaPaga.setEnabled(emprestimo != null && emprestimo.foiDevolvido() && emprestimo.temMultaPendente());
        renovar.setEnabled(emprestimo != null && emprestimo.podeRenovar());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        atualizar = new javax.swing.JButton();
        adicionar = new javax.swing.JButton();
        remover = new javax.swing.JButton();
        devolver = new javax.swing.JButton();
        renovar = new javax.swing.JButton();
        multaPaga = new javax.swing.JButton();

        atualizar.setText("Atualizar");
        atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarActionPerformed(evt);
            }
        });

        adicionar.setText("Adicionar");
        adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarActionPerformed(evt);
            }
        });

        remover.setText("Remover");
        remover.setEnabled(false);
        remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerActionPerformed(evt);
            }
        });

        devolver.setText("Devolver");
        devolver.setEnabled(false);
        devolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devolverActionPerformed(evt);
            }
        });

        renovar.setText("Renovar");
        renovar.setEnabled(false);
        renovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renovarActionPerformed(evt);
            }
        });

        multaPaga.setText("Multa paga");
        multaPaga.setEnabled(false);
        multaPaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multaPagaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(atualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adicionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(remover)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(devolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(renovar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(multaPaga))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(adicionar)
                .addComponent(remover)
                .addComponent(renovar)
                .addComponent(multaPaga)
                .addComponent(devolver)
                .addComponent(atualizar))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarActionPerformed
        events.emit();
    }//GEN-LAST:event_atualizarActionPerformed

    private void removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerActionPerformed

        int resposta = JOptionPane.showConfirmDialog(
                this,
                "Tem certeza que vai remover este empréstimo?",
                "Remover empréstimo",
                JOptionPane.YES_NO_OPTION
        );

        if (resposta == JOptionPane.YES_OPTION) {
            try {
                emprestimoController.excluir(emprestimo);
                events.emit();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(
                        this,
                        ex.getMessage(),
                        "Erro ao excluir empréstimo",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }//GEN-LAST:event_removerActionPerformed

    private void adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarActionPerformed
        CriarEmprestimo criarEmprestimoDialog = new CriarEmprestimo(null, true);
        criarEmprestimoDialog.setVisible(true);
        events.emit();
    }//GEN-LAST:event_adicionarActionPerformed

    private void devolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devolverActionPerformed
        int resposta = JOptionPane.showConfirmDialog(
                this,
                "Tem certeza que deseja marcar como devolvido?",
                "Marcar como devolvido",
                JOptionPane.YES_NO_OPTION
        );

        if (resposta == JOptionPane.YES_OPTION) {
            try {
                emprestimoController.devolverLivro(emprestimo);
                events.emit();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(
                        this,
                        ex.getMessage(),
                        "Erro ao marcar como devolvido",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }//GEN-LAST:event_devolverActionPerformed

    private void renovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renovarActionPerformed
        int resposta = JOptionPane.showConfirmDialog(
                this,
                "Tem certeza que vai renovar este empréstimo?",
                "Renovar empréstimo",
                JOptionPane.YES_NO_OPTION
        );

        if (resposta == JOptionPane.YES_OPTION) {
            try {
                emprestimoController.renovarEmprestimo(emprestimo);
                events.emit();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(
                        this,
                        ex.getMessage(),
                        "Erro ao renovar empréstimo",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }//GEN-LAST:event_renovarActionPerformed

    private void multaPagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multaPagaActionPerformed
        int resposta = JOptionPane.showConfirmDialog(
                this,
                "Tem certeza que vai marcar a multa como paga para este empréstimo?",
                "Marcar multa como paga",
                JOptionPane.YES_NO_OPTION
        );

        if (resposta == JOptionPane.YES_OPTION) {
            try {
                emprestimoController.multaPaga(emprestimo);
                events.emit();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(
                        this,
                        ex.getMessage(),
                        "Erro ao marcar multa como paga",
                        JOptionPane.ERROR_MESSAGE
                );
            }
        }
    }//GEN-LAST:event_multaPagaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionar;
    private javax.swing.JButton atualizar;
    private javax.swing.JButton devolver;
    private javax.swing.JButton multaPaga;
    private javax.swing.JButton remover;
    private javax.swing.JButton renovar;
    // End of variables declaration//GEN-END:variables
}
