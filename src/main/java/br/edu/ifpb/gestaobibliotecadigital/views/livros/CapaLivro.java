package br.edu.ifpb.gestaobibliotecadigital.views.livros;

import br.edu.ifpb.gestaobibliotecadigital.models.livros.decorators.LivroComCapaAlternativa;
import java.awt.Image;
import java.net.MalformedURLException;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.SwingConstants;
import br.edu.ifpb.gestaobibliotecadigital.models.livros.Livro;
import br.edu.ifpb.gestaobibliotecadigital.utils.Helpers;
import java.util.concurrent.ExecutionException;
import javax.swing.SwingWorker;

public class CapaLivro extends javax.swing.JPanel {

    private Livro livro;

    public CapaLivro() {
        initComponents();
        setLivro(null);
    }

    private void resetCapa() {
        capaDoLivro.setIcon(null);
        capaDoLivro.setText(null);
        capaDoLivro.setToolTipText(null);
    }

    private void setCapaIndisponivel() {
        capaDoLivro.setIcon(null);
        capaDoLivro.setText("Indispon√≠vel");
        capaDoLivro.setToolTipText(null);
    }

    private void carregarCapa(String urlString) {

        try {
            URL url = new URL(urlString);
            ImageIcon original = new ImageIcon(url);
            Image capa = original.getImage().getScaledInstance(186, 200, Image.SCALE_SMOOTH);
            capaDoLivro.setIcon(new ImageIcon(capa));
            capaDoLivro.setText(null);
            capaDoLivro.setToolTipText(urlString);
        } catch (MalformedURLException e) {
            setCapaIndisponivel();
        }
    }

    /**
     * Atualiza o livro selecionado
     *
     * @param livro
     */
    public void setLivro(Livro livro) {
        this.livro = livro;

        resetCapa();

        if (livro == null) {
            setCapaIndisponivel();
            return;
        }

        LivroComCapaAlternativa livroComCapa = Helpers.getLivroComDecorador(livro, LivroComCapaAlternativa.class);

        if (livroComCapa == null) {
            setCapaIndisponivel();
            return;
        }

        carregarCapa(livroComCapa.getUrlCapa());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        capaDoLivro = new javax.swing.JLabel();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(capaDoLivro, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(capaDoLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        capaDoLivro.setHorizontalAlignment(SwingConstants.CENTER);
        capaDoLivro.setVerticalAlignment(SwingConstants.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel capaDoLivro;
    // End of variables declaration//GEN-END:variables
}
